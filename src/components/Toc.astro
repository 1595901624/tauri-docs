---
import { convertCollectionToTree, geti18nCollection } from '@src/utils.js'
import type { getCollection as CollectionType } from 'astro:content'
import { l } from 'astro-i18n'

interface Props<C extends Parameters<typeof CollectionType>[0]> {
  collection: C
  path?: string
  lang: string
}

const { collection, lang } = Astro.props

// const entries = await geti18nCollection(collection, lang)
// let tree = convertCollectionToTree(entries)
// console.log(tree['getting-started'])
// Object.entries(tree)
//   .filter(([_, entry]) => Object.values(entry).includes('_metadata'))
//   .forEach(([_, entry]) => console.log(entry['_metadata'['slug']]))
---

<p>TODO</p>

<!-- <div class="grid lg:grid-cols-2 gap-4 auto-rows-fr">
  {
    Object.entries(tree['getting-started'])
      .filter(([_, value]) => Object.values(value).includes('_metadata'))
      .map(([_, value]) => (
        <a
          href={l(`/docs/${value['_metadata']['slug']}`)}
          class="card flex flex-col h-full justify-center"
        >
          <h3 class="h3">{value['_metadata']['data']['meta_title']}</h3>
          <p>{value['_metadata']['data']['meta_description']}</p>
        </a>
      ))
  }
</div> -->
