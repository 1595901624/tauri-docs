---
import type { CollectionEntry } from 'astro:content'
import { l } from 'astro-i18n'
import { convertCollectionToTree } from '@src/utils'
import TreeNode from './TreeNode.astro'

interface Props {
  entries: CollectionEntry<'docs'>[]
  // Will be appended to the beginning of a slug
  baseUrl?: string
  // Takes into account full slug
  maxDepth?: number
  startsWith?: string
}

let { entries, baseUrl, maxDepth, startsWith } = Astro.props

const tree = convertCollectionToTree(entries)

// if (startsWith) {
//   entries = entries.filter((entry) => entry.slug.startsWith(startsWith))
// }

// if (maxDepth) {
//   entries = entries.filter((entry) => entry.slug.split('/').length < maxDepth)
// }
---

<ul>
  {tree.map((node) => <TreeNode node={node} />)}
</ul>
