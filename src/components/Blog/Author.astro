---
type Author = {
  id: string
  name: string
  title: string
  url: string
  imageSrc: string
}

const availableAuthors: Author[] = [
  {
    id: 'nothingismagick',
    name: 'Daniel Thompson-Yvetot',
    title: 'Tauri Cofounder',
    url: 'https://github.com/nothingismagick',
    imageSrc: '/img/blog/authors/nothingismagick.jpg',
  },
  {
    id: 'jonaskruckenberg',
    name: 'Jonas Kruckenberg',
    title: 'Tauri Working Group',
    url: 'https://github.com/JonasKruckenberg',
    imageSrc: '/img/blog/authors/jonaskruckenberg.jpg',
  },
  {
    id: 'beanow',
    name: 'Robin van Boven',
    title: 'Tauri Board Director',
    url: 'https://github.com/Beanow',
    imageSrc: '/img/blog/authors/beanow.jpg',
  },
  {
    id: 'lucasfernog',
    name: 'Lucas Nogueira',
    title: 'Tauri Cofounder',
    url: 'https://github.com/lucasfernog',
    imageSrc: '/img/blog/authors/lucasfernog.jpg',
  },
]
interface Props {
  authors: string[]
}

const { authors } = Astro.props

const authorsObject = authors.map((author) => {
  const matchedAuthor = availableAuthors.find(
    (avilableAuthor) => avilableAuthor.id === author
  )
  if (!matchedAuthor) {
    throw `${author} is not in the list of available authors.`
  }
  return matchedAuthor
})
---

<div class="flex gap-4">
  {
    authorsObject.map((author) => (
      <a
        class="flex gap-4 items-center hover:text-primary transition"
        href={author.url}
        target="_blank"
      >
        <img
          src={author.imageSrc}
          alt="Author image"
          class="w-12 rounded-[24px]"
        />
        <div class="flex flex-col gap-1">
          <p>{author.name}</p>
          <div class="small-caps">{author.title}</div>
        </div>
      </a>
    ))
  }
</div>
