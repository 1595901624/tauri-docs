---
import Author from '@src/components/Blog/Author.astro'
import Layout from '@src/layouts/SidebarLayout.astro'
import { geti18nCollection } from '@src/utils'
import type { MarkdownHeading } from 'astro'
import { astroI18n, t } from 'astro-i18n'

export async function getStaticPaths() {
  const collection = await geti18nCollection('blog', astroI18n.langCode)

  return collection.map((entry) => ({
    params: {
      slug: entry.slug,
    },
    props: {
      entry,
    },
  }))
}

const { entry } = Astro.props
let { Content, headings }: { Content: any; headings: MarkdownHeading[] } =
  await entry.render()
const minHeading = headings.reduce(
  (a, heading) => (a < heading.depth ? a : heading.depth),
  6
)
const headingsWithIndention = headings.map((heading) => ({
  ...heading,
  indention: `pl-${(heading.depth - minHeading) * 2}`,
}))
---

<Layout title={entry.data.meta_title}>
  <div class="flex flex-col gap-4">
    <h1>{entry.data.meta_title}</h1>
    <div class="small-caps">
      {entry.data.date.toLocaleDateString(undefined, { dateStyle: 'long' })}
    </div>
    <Author authors={entry.data.authors} />
    {
      entry.data.imageSrc && (
        <img src={entry.data.imageSrc} alt={t('blog.post-image')} />
      )
    }
    {entry.data.meta_description && <div>{entry.data.meta_description}</div>}

    <main class="prose max-w-none">
      <Content />
    </main>
  </div>
  <div slot="trailing-sidebar">
    <div class="small-caps">{t('layout.on-this-page')}</div>
    <ul>
      {
        headingsWithIndention.map((heading) => (
          <li>
            <a class={heading.indention} href={`#${heading.slug}`}>
              {heading.text}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</Layout>
